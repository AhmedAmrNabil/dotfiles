{"ref":"335774cd-3f92-444b-9052-7e470b742db9","syncData":{"version":1,"machineId":"20b4b786-d11c-4438-aa18-66a35132aa6f","content":"{\"javascript.json\":\"{\\n  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n  // same ids are connected.\\n  // Example:\\n  // \\\"Print to console\\\": {\\n  // \\t\\\"prefix\\\": \\\"log\\\",\\n  // \\t\\\"body\\\": [\\n  // \\t\\t\\\"console.log('$1');\\\",\\n  // \\t\\t\\\"$2\\\"\\n  // \\t],\\n  // \\t\\\"description\\\": \\\"Log output to console\\\"\\n  // }\\n\\n  \\\"server\\\": {\\n    \\\"prefix\\\": \\\"server\\\",\\n    \\\"body\\\": [\\n      \\\"const express = require('express');\\\",\\n      \\\"const bodyParser = require('body-parser');\\\",\\n      \\\"\\\",\\n      \\\"const app = express();\\\",\\n      \\\"const port = 8080;\\\",\\n      \\\"\\\",\\n      \\\"app.use(bodyParser.urlencoded({extended:true}));\\\",\\n      \\\"app.use(bodyParser.json());\\\",\\n      \\\"app.use(express.static('public'));\\\",\\n      \\\"\\\",\\n      \\\"app.get('/',function(req,res){\\\",\\n      \\\"  res.send('Hello World');\\\",\\n      \\\"});\\\",\\n      \\\"\\\",      \\n      \\\"app.listen(port, function () {\\\",\\n      \\\"  console.log('Started listening on port ' + port);\\\",\\n      \\\"});\\\",\\n    ],\\n    \\\"description\\\": \\\"create a simple server\\\"\\n  }\\n}\\n\",\"cpp.json\":\"{\\n  // Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n  // same ids are connected.\\n  // Example:\\n  // \\\"Print to console\\\": {\\n  // \\t\\\"prefix\\\": \\\"log\\\",\\n  // \\t\\\"body\\\": [\\n  // \\t\\t\\\"console.log('$1');\\\",\\n  // \\t\\t\\\"$2\\\"\\n  // \\t],\\n  // \\t\\\"description\\\": \\\"Log output to console\\\"\\n  // }\\n  \\\"cpp snippets\\\": {\\n    \\\"prefix\\\": \\\"cpp\\\",\\n    \\\"body\\\": [\\n      \\\"#include<iostream>\\\",\\n      \\\"#define loop(n) for (int i = 0; i < n; i++)\\\",\\n      \\\"#define loop1(n) for (int i = 1; i <= n; i++)\\\",\\n      \\\"using namespace std;\\\",\\n      \\\"\\\",\\n      \\\"int main(){\\\",\\n      \\\"    $0\\\",\\n      \\\"    return 0;\\\",\\n      \\\"}\\\"\\n    ],\\n    \\\"description\\\": \\\"to produce the main snippet for cpp\\\"\\n  }\\n}\\n\",\"python.json\":\"{\\n  // Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and\\n  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n  // same ids are connected.\\n  // Example:\\n  \\\"use selenium\\\": {\\n    \\\"prefix\\\": \\\"selenium\\\",\\n    \\\"body\\\": [\\n      \\\"from selenium import webdriver\\\",\\n      \\\"from selenium.webdriver.chrome.options import Options\\\",\\n      \\\"from selenium.webdriver.common.by import By\\\",\\n      \\\"\\\",\\n      \\\"chrome_options = Options()\\\",\\n      \\\"chrome_options.binary_location = 'C:/development/chrome-win64/chrome.exe'\\\",\\n      \\\"chrome_options.add_experimental_option('detach', True)\\\",\\n      \\\"\\\",\\n      \\\"driver = webdriver.Chrome(options=chrome_options)\\\"\\n    ],\\n    \\\"description\\\": \\\"selenium 4 basic setup\\\"\\n  },\\n  \\\"use flask\\\":{\\n    \\\"prefix\\\": \\\"appflask\\\",\\n    \\\"body\\\": [\\n      \\\"from flask import Flask,render_template\\\",\\n      \\\"app = Flask(__name__)\\\",\\n      \\\" \\\",\\n      \\\"@app.route('/')\\\",\\n      \\\"def main():\\\",\\n      \\\"    return render_template('index.html')\\\",\\n      \\\" \\\",\\n      \\\"if __name__ == '__main__':\\\",\\n      \\\"    app.run('0.0.0.0','3000',debug=True)\\\"\\n    ],\\n    \\\"description\\\": \\\"create basic flask app\\\"\\n  }\\n}\\n\",\"html.json\":\"{\\n\\t// Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n}\"}"}}